wine-quality-prediction/
.
├── Sample File Structure.ini
│
├── docker-compose.yml                             # Docker Compose file to manage and run all containers together
│
├── data-preprocessing
│   ├── Data Preprocessing Dockerfile.dockerfile   # Dockerfile for containerizing the preprocessing module
│   ├── preprocess.py                              # Python script to clean and prepare the dataset
│   ├── preprocess_deployment.yaml                 # Kubernetes YAML file for deploying preprocessing container
│   ├── requirements.txt                           # Dependencies for preprocessing (e.g., pandas, numpy)
│   └── test_preprocess.py                         # Unit test file for testing preprocessing logic
│
├── model-inference
│   ├── Dockerfile                                 # Dockerfile to containerize inference module
│   ├── inference.py                               # Main Python script for model loading & prediction
│   ├── requirements.txt                           # Libraries (e.g., flask, joblib, pandas) for inference
│   └── test_inference.py                          # Test suite to validate prediction functionality
│
├── model-training
│   ├── Model Training Dockerfile.dockerfile       # Dockerfile for model training container
│   ├── model-training-deployment.yaml             # Kubernetes deployment YAML for model training
│   ├── pv-pvc.yaml                                # Persistent Volume/Claim configuration for storing models
│   ├── redundant
│   │   ├── model-training-configmap.yaml          # Kubernetes ConfigMap for environment variables
│   │   ├── model-training-secrets.yaml            # Kubernetes Secrets for sensitive info
│   │   └── model-training-service.yaml            # Kubernetes Service to expose the training module
│   ├── requirements.txt                           # Dependencies (e.g., sklearn, pandas, joblib)
│   ├── test_train_model.py                        # Test script for model training functions
│   └── train_model.py                             # Core training logic: trains model & saves `.pkl` in `volumes/models`
│
├── raw data
│   └── wine_quality_assignment.csv                # Original raw dataset for the project.
│
├── user-interface
│   ├── Web Application Dockerfile.dockerfile      # Dockerfile for UI container
│   ├── assets
│   │   ├── css
│   │   │   └── style.css                          # UI styling
│   │   └── js
│   │       └── script.js                          # UI interactivity with JavaScript
│   ├── requirements.txt                           # Libraries for running the Flask app
│   ├── templates
│   │   ├── index.html                             # Homepage
│   │   ├── model_pred_csv.html                    # UI for CSV-based predictions
│   │   └── model_pred_manual.html                 # UI for manual data entry predictions
│   └── winequality_app.py                         # Flask web app to handle requests and display predictions
│
└── volumes
    ├── data                                       # Stores cleaned data
    │   ├── cleaned_wine_quality.csv               # Cleaned dataset post-preprocessing
    │   ├── wine_quality.json                      # JSON representation of the dataset
    ├── models                                     # Stores trained models (e.g., .pkl files)
    │   ├── saved_model.pkl
    ├── user                                       # Stores user-uploaded data for predictions
    │   ├── input.csv
    │   ├── cleaned_input.csv
    │   ├── predictions.csv