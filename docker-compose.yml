version: "3.9"

services:
  data-preprocessing:
    build:
      context: ./data-preprocessing  # Directory where Dockerfile is located
      dockerfile: data_preprocessing.dockerfile  # Specify the actual filename
    container_name: data-preprocessing
    expose:
      - "5000"
    volumes:
      - ./volumes/raw_data:/volumes/raw_data
      - ./volumes/user:/volumes/user
      - ./volumes/data:/volumes/data
    networks:
      - app_network
    command: ["python", "./preprocess.py"]

  model-training:
    build:
      context: ./model-training
      dockerfile: model_training.dockerfile  # Specify the actual filename
    container_name: model-training
    expose:
      - "5001"
    volumes:
      - ./volumes/data:/volumes/data
      - ./volumes/models:/volumes/models
    environment:
      - TRAINING_FILE_PATH=/volumes/data/clean_wine_quality.csv
      - SAVED_MODEL_DIR=/volumes/models/saved_model.pkl
    networks:
      - app_network
    depends_on:
      - data-preprocessing
    command: ["python", "./train_model.py"]

  model-inference:
    build:
      context: ./model-inference
      dockerfile: model_inference.dockerfile  # Specify the actual filename 
    expose:
      - "5002"
    volumes:
      - data:/volumes/data
      - models:/volumes/models
      - user:/volumes/user
    networks:
      - app_network
    depends_on:
      - model-training  # Ensure trained model exists before inference
    command: ["python", "./inference.py"]

  webapp:
    build:
      context: ./user-interface
      dockerfile: web_application.dockerfile  # Specify the actual filename
    container_name: webapp
    ports:
      - "5003:5003"
    volumes:
      - user:/volumes/user
      - data:/volumes/data
    depends_on:
      - model-inference  # Ensure inference is available before UI starts
    networks:
      - app_network

volumes:
  user:  # ðŸ”¹ User input for predictions
  data:  # ðŸ”¹ Processed data storage
  models:  # ðŸ”¹ Trained models
  raw_data: 

networks:
  app_network:
    driver: bridge
